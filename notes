Notes:

Load up .mat file and check that output looked good.
(particularly the counts of objects per image)
John managed to extract the names from the files.
I want to check if there also included the types of objects in each image.

Two - sampling.
Can I use those paths to sample the images.
(I'm thinking of first a random sample of around 5% of the data.

Three - presentation

Thank sponsors

Thank regulars for helping pull together and organize data
Matt B., John B., Julie, Josh, Kenny, Zach, Isil, Tal

introduce problem
 - image segmentation  (why? Prepration step for more complicated work. Simplify recognition.)

introduce data
 - MIT ADE20K set from 2017 (website)
 - images with handmade segmentation and annotations.
 - various sizes, topics.

Format
 JPG initial image
 png segments
 (text annotations)

Providing:
Tiny, Small, Medium sets available at dive-into.info
Tiny Set  (1MB)    - smallest, simplest images
Small Set (20MB)   -
Medium set (100MB) - 1k images, various sizes
Full dataset       - PLEASE ONLY DOWNLOAD AT HOME


Approaches:
Clustering
Support Vector Machine
Neural Networks


Look at Matt's tiny set.


Sizing: There's around 20k images.
25% are smaller than 320x240
50% are smaller than 640x480.
Another quarter are in the 1600x1200 bucket.

And a small fraction are larger than 3200x2400

## Running Tensorflow Docker:
- "docker run --gpus all --rm nvidia/cuda:11.0.3-base-ubuntu18.04 nvidia-smi"
To check GPU is available.

- modify /etc/nvidia-container-runtime/config.toml from "@/sbin/ldconfig" to "/sbin/ldconfig"

- mostly Tensorflow versions more recent than 2.10 seem to use different CUDA drivers, which do not match the host.  and so, the docker image does not find the GPU.


# Aug 14
- have gotten a Unet work.
- added validation scoring
- need to work on an input pipeline.  if the images are too large it fails.
- binary encoding to try limit the output size.  concern is that it will struggle on rarer events.  this does allow much bigger class numbers.

## Image Pipeline
- randomly select subsets of each image of up to 512 x 512 or 256 x 256
- keep augmented images data within folds